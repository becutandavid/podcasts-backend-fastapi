version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/data/milvus/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/data/milvus/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.2.5
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/data/milvus/milvus:/var/lib/milvus
      - ${DOCKER_VOLUME_DIRECTORY:-.}/config/milvus.yaml:/milvus/configs/milvus.yaml
    ports:
      - 19530:19530
      - 9091:9091
    depends_on:
      - "etcd"
      - "minio"

  postgres:
    image: postgres:13.2
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
  
  podcasts_backend:
    build:
          context: .
          dockerfile: Dockerfile
    container_name: podcasts_backend
    environment:
      MILVUS_HOST: standalone
      MILVUS_PORT: 19530
      MILVUS_COLLECTION: episodes
      PYTHONBUFFERED: 1

      ACCESS_TOKEN_SECRET_KEY: ${ACCESS_TOKEN_SECRET_KEY}
      ACCESS_TOKEN_ALGORITHM: ${ACCESS_TOKEN_ALGORITHM}

      DATABASE_URL: ${DATABASE_URL}

    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/podcasts_backend:/app/podcasts_backend
      - ${DOCKER_VOLUME_DIRECTORY:-.}/podcasts_data:/podcasts_data

    ports:
      - 8000:8000
    depends_on:
      - "standalone"
      - "postgres"

    command: "poetry run uvicorn podcasts_backend.main:app --host 0.0.0.0 --port 8000 --reload" 


networks:
  default:
    name: milvus
    driver: bridge
